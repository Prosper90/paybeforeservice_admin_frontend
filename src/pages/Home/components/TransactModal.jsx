/* eslint-disable react/prop-types */
import { useEffect, useState } from "react";

// ICONS
import { AiOutlineClose } from "react-icons/ai";
import { copyCode } from "../../../utils/constants";
import { TxDownload } from "../../../components/Dashboard/Transactioncomp/Txcomp";

const TransactModal = ({
  _closeModal,
  paymentDetails,
  socketRecieved,
  socketData,
}) => {
  const [closeModal, setCloseModal] = useState(false);
  const [copy, setCopy] = useState(false);

  const handleCloseModal = () => {
    setCloseModal(true);
    _closeModal(closeModal);
  };

  // const handlePayment = () => {
  //     handleCloseModal()
  //     alert("Transaction Initiated âœ…")
  // }
  const formatDate = (dateString) => {
    const options = {
      year: "numeric",
      month: "short",
      day: "numeric",
      hour: "2-digit",
      // minute: '2-digit',
      // second: '2-digit',
      // timeZoneName: 'short',
    };
    const formattedDate = new Date(dateString).toLocaleString("en-US", options);
    return formattedDate;
  };

  useEffect(() => {
    setTimeout(() => {
      setCopy(false);
    }, 4500);
  }, [socketRecieved, copy]);

  return (
    <div className="max-w-[450px] bg-white rounded-2xl py-[40px] px-[30px] w-[50%] modal:h-fit sm:w-[95vw] relative">
      <div className="absolute right-[30px]" onClick={handleCloseModal}>
        <AiOutlineClose color="#555555" size={20} />
      </div>
      <h2 className="mb-[30px] font-ui-semi text-[20px] text-center">
        Transaction Detail
      </h2>
      <div className="rounded-lg border-ui-border py-[23px] px-5 border-border">
        {socketRecieved ? (
          <div className="flex flex-col justify-center items-center ">
            <svg
              width="95"
              height="95"
              viewBox="0 0 132 138"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <rect
                x="0.705566"
                y="7.02344"
                width="130.476"
                height="130.476"
                rx="65.2381"
                fill="#6E3EFF"
                fill-opacity="0.1"
              />
              <path
                d="M64.5396 19.329C65.0987 18.1405 66.7893 18.1405 67.3484 19.329C67.8756 20.4497 69.4388 20.5317 70.0803 19.4721C70.7606 18.3486 72.4419 18.5253 72.8737 19.7657C73.2809 20.9355 74.827 21.1804 75.5757 20.1937C76.3697 19.1475 78.0233 19.4989 78.3231 20.7777C78.6058 21.9836 80.1178 22.3887 80.9656 21.4857C81.8646 20.5282 83.4724 21.0506 83.6369 22.3537C83.792 23.5825 85.2534 24.1435 86.1909 23.3341C87.1851 22.4758 88.7294 23.1634 88.7568 24.4765C88.7826 25.7148 90.1773 26.4255 91.1944 25.7185C92.2728 24.9688 93.7368 25.8141 93.6268 27.1228C93.523 28.3571 94.8358 29.2096 95.9212 28.6128C97.0721 27.98 98.4397 28.9737 98.1935 30.2638C97.9613 31.4804 99.1778 32.4655 100.32 31.9854C101.53 31.4763 102.787 32.6075 102.407 33.8648C102.049 35.0505 103.156 36.1574 104.341 35.7993C105.599 35.4195 106.73 36.6758 106.221 37.8866C105.741 39.0284 106.726 40.2448 107.942 40.0126C109.232 39.7664 110.226 41.1341 109.593 42.2849C108.996 43.3703 109.849 44.6831 111.083 44.5793C112.392 44.4693 113.237 45.9333 112.488 47.0118C111.781 48.0288 112.491 49.4235 113.73 49.4493C115.043 49.4767 115.73 51.0211 114.872 52.0152C114.063 52.9528 114.624 54.4141 115.852 54.5692C117.156 54.7337 117.678 56.3415 116.72 57.2405C115.817 58.0883 116.223 59.6003 117.428 59.883C118.707 60.1828 119.059 61.8364 118.012 62.6304C117.026 63.3791 117.271 64.9252 118.44 65.3324C119.681 65.7642 119.857 67.4455 118.734 68.1258C117.674 68.7673 117.756 70.3305 118.877 70.8577C120.066 71.4168 120.066 73.1074 118.877 73.6665C117.756 74.1937 117.674 75.7569 118.734 76.3985C119.857 77.0787 119.681 78.76 118.44 79.1918C117.271 79.599 117.026 81.1451 118.012 81.8939C119.059 82.6878 118.707 84.3414 117.428 84.6412C116.223 84.9239 115.817 86.4359 116.72 87.2837C117.678 88.1827 117.156 89.7905 115.852 89.955C114.624 90.1101 114.063 91.5715 114.872 92.509C115.73 93.5032 115.043 95.0476 113.73 95.0749C112.491 95.1007 111.781 96.4955 112.488 97.5125C113.237 98.5909 112.392 100.055 111.083 99.9449C109.849 99.8411 108.996 101.154 109.593 102.239C110.226 103.39 109.232 104.758 107.942 104.512C106.726 104.279 105.741 105.496 106.221 106.638C106.73 107.848 105.599 109.105 104.341 108.725C103.156 108.367 102.049 109.474 102.407 110.659C102.787 111.917 101.53 113.048 100.32 112.539C99.1778 112.059 97.9613 113.044 98.1935 114.26C98.4397 115.551 97.0721 116.544 95.9212 115.911C94.8358 115.315 93.523 116.167 93.6268 117.401C93.7368 118.71 92.2728 119.555 91.1944 118.806C90.1773 118.099 88.7826 118.809 88.7568 120.048C88.7294 121.361 87.1851 122.048 86.1909 121.19C85.2533 120.381 83.792 120.942 83.6369 122.171C83.4724 123.474 81.8646 123.996 80.9656 123.039C80.1178 122.136 78.6058 122.541 78.3231 123.747C78.0233 125.025 76.3697 125.377 75.5757 124.331C74.827 123.344 73.2809 123.589 72.8737 124.759C72.4419 125.999 70.7606 126.176 70.0803 125.052C69.4388 123.993 67.8756 124.074 67.3484 125.195C66.7893 126.384 65.0987 126.384 64.5396 125.195C64.0124 124.074 62.4492 123.993 61.8077 125.052C61.1274 126.176 59.4461 125.999 59.0143 124.759C58.6071 123.589 57.061 123.344 56.3123 124.331C55.5183 125.377 53.8647 125.025 53.5649 123.747C53.2822 122.541 51.7702 122.136 50.9224 123.039C50.0234 123.996 48.4156 123.474 48.2511 122.171C48.096 120.942 46.6346 120.381 45.6971 121.19C44.7029 122.048 43.1586 121.361 43.1312 120.048C43.1054 118.809 41.7107 118.099 40.6936 118.806C39.6152 119.555 38.1512 118.71 38.2612 117.401C38.365 116.167 37.0522 115.315 35.9668 115.911C34.816 116.544 33.4483 115.551 33.6945 114.26C33.9267 113.044 32.7102 112.059 31.5685 112.539C30.3577 113.048 29.1014 111.917 29.4812 110.659C29.8393 109.474 28.7324 108.367 27.5467 108.725C26.2894 109.105 25.1582 107.848 25.6673 106.638C26.1474 105.496 25.1623 104.279 23.9456 104.512C22.6555 104.758 21.6619 103.39 22.2947 102.239C22.8915 101.154 22.039 99.8411 20.8047 99.9449C19.4959 100.055 18.6507 98.5909 19.4004 97.5125C20.1074 96.4955 19.3967 95.1007 18.1584 95.0749C16.8453 95.0476 16.1576 93.5032 17.0159 92.509C17.8254 91.5715 17.2644 90.1101 16.0355 89.955C14.7325 89.7905 14.2101 88.1827 15.1676 87.2837C16.0706 86.4359 15.6655 84.9239 14.4595 84.6412C13.1808 84.3414 12.8293 82.6878 13.8756 81.8939C14.8622 81.1451 14.6174 79.599 13.4476 79.1918C12.2072 78.76 12.0305 77.0787 13.154 76.3985C14.2136 75.7569 14.1316 74.1937 13.0108 73.6665C11.8224 73.1074 11.8224 71.4168 13.0108 70.8577C14.1316 70.3305 14.2136 68.7673 13.154 68.1258C12.0305 67.4455 12.2072 65.7642 13.4476 65.3324C14.6174 64.9252 14.8622 63.3791 13.8756 62.6304C12.8293 61.8364 13.1808 60.1828 14.4595 59.883C15.6655 59.6003 16.0706 58.0883 15.1676 57.2405C14.2101 56.3415 14.7325 54.7337 16.0355 54.5692C17.2644 54.4141 17.8254 52.9528 17.0159 52.0152C16.1576 51.0211 16.8453 49.4767 18.1584 49.4493C19.3967 49.4235 20.1074 48.0288 19.4004 47.0118C18.6507 45.9333 19.4959 44.4693 20.8047 44.5793C22.039 44.6831 22.8915 43.3703 22.2947 42.2849C21.6619 41.1341 22.6555 39.7664 23.9456 40.0126C25.1623 40.2448 26.1474 39.0284 25.6673 37.8866C25.1582 36.6758 26.2894 35.4195 27.5467 35.7993C28.7324 36.1574 29.8393 35.0505 29.4812 33.8648C29.1014 32.6075 30.3577 31.4763 31.5684 31.9854C32.7102 32.4655 33.9267 31.4804 33.6945 30.2638C33.4483 28.9737 34.816 27.98 35.9668 28.6128C37.0522 29.2096 38.365 28.3571 38.2612 27.1228C38.1512 25.8141 39.6152 24.9688 40.6936 25.7185C41.7107 26.4255 43.1054 25.7148 43.1312 24.4765C43.1586 23.1634 44.7029 22.4758 45.6971 23.3341C46.6346 24.1435 48.096 23.5825 48.2511 22.3537C48.4156 21.0506 50.0234 20.5282 50.9224 21.4857C51.7702 22.3887 53.2822 21.9836 53.5649 20.7777C53.8647 19.4989 55.5183 19.1475 56.3123 20.1937C57.061 21.1804 58.6071 20.9355 59.0143 19.7657C59.4461 18.5253 61.1274 18.3486 61.8077 19.4721C62.4492 20.5317 64.0124 20.4497 64.5396 19.329Z"
                fill="#6E3EFF"
              />
              <path
                d="M61.3474 86.8911C60.0038 86.8899 58.7157 86.3552 57.7663 85.4046L48.2223 75.8437C47.2733 74.8936 46.7402 73.6055 46.7402 72.2626C46.7402 70.9197 47.2733 69.6317 48.2223 68.6815L49.4047 67.4822C49.8755 67.0098 50.4349 66.6349 51.0509 66.3791C51.6669 66.1234 52.3273 65.9917 52.9943 65.9917C53.6612 65.9917 54.3216 66.1234 54.9376 66.3791C55.5536 66.6349 56.113 67.0098 56.5838 67.4822L61.3474 72.2626L74.4893 59.1206C75.4588 58.2023 76.7435 57.6904 78.0789 57.6904C79.4143 57.6904 80.6989 58.2023 81.6684 59.1206L82.8509 60.32C83.7999 61.2702 84.3329 62.5582 84.3329 63.9011C84.3329 65.244 83.7999 66.532 82.8509 67.4822L64.9454 85.4046C64.4732 85.8773 63.9123 86.252 63.2948 86.5071C62.6773 86.7623 62.0155 86.8927 61.3474 86.8911ZM53.0027 69.3741C52.7792 69.375 52.5581 69.4203 52.3523 69.5073C52.1464 69.5943 51.9598 69.7212 51.8034 69.8809L50.604 71.0633C50.4457 71.2203 50.3201 71.4072 50.2343 71.613C50.1485 71.8188 50.1044 72.0396 50.1044 72.2626C50.1044 72.4856 50.1485 72.7064 50.2343 72.9123C50.3201 73.1181 50.4457 73.3049 50.604 73.462L60.1649 83.0059C60.4814 83.3206 60.9095 83.4972 61.3558 83.4972C61.8021 83.4972 62.2302 83.3206 62.5467 83.0059L80.4691 65.1004C80.6274 64.9434 80.7531 64.7566 80.8389 64.5507C80.9246 64.3449 80.9688 64.1241 80.9688 63.9011C80.9688 63.6781 80.9246 63.4573 80.8389 63.2515C80.7531 63.0456 80.6274 62.8588 80.4691 62.7018L79.2698 61.5193C78.9533 61.2047 78.5252 61.0281 78.0789 61.0281C77.6326 61.0281 77.2045 61.2047 76.888 61.5193L62.5467 75.8437C62.2302 76.1583 61.8021 76.3349 61.3558 76.3349C60.9095 76.3349 60.4814 76.1583 60.1649 75.8437L54.1851 69.8809C53.8733 69.5626 53.4483 69.3804 53.0027 69.3741Z"
                fill="white"
              />
              <path
                d="M131.295 6.61237C131.296 6.79156 131.242 6.96672 131.139 7.11352C131.036 7.26032 130.89 7.37146 130.721 7.43149L127.257 8.69129L125.998 12.1551C125.936 12.3223 125.824 12.4665 125.677 12.5683C125.531 12.6702 125.357 12.7247 125.179 12.7247C125 12.7247 124.826 12.6702 124.68 12.5683C124.533 12.4665 124.421 12.3223 124.359 12.1551L123.1 8.68747L119.636 7.43149C119.469 7.36942 119.324 7.25767 119.223 7.11124C119.121 6.96482 119.066 6.79073 119.066 6.61237C119.066 6.43401 119.121 6.25993 119.223 6.1135C119.324 5.96707 119.469 5.85532 119.636 5.79325L123.103 4.53345L124.359 1.06968C124.421 0.902471 124.533 0.75826 124.68 0.656422C124.826 0.554585 125 0.5 125.179 0.5C125.357 0.5 125.531 0.554585 125.677 0.656422C125.824 0.75826 125.936 0.902471 125.998 1.06968L127.257 4.53728L130.721 5.79325C130.89 5.85328 131.036 5.96442 131.139 6.11122C131.242 6.25802 131.296 6.43319 131.295 6.61237Z"
                fill="#6E3EFF"
              />
            </svg>
            <div className="text-sm font-semibold text-[#22bb33]">
              Payment Successfull
            </div>

            <div className="w-[80%] md:w-[100%] flex flex-col gap-3 text-xs font-semibold text-[#555] mt-10">
              <div className="w-100 flex justify-between">
                <div className="">Payment Type</div>
                <div className="">Hook</div>
              </div>

              <div className="w-100 flex justify-between">
                <div className="">Bank</div>
                <div className="">HDFC</div>
              </div>

              <div className="w-100 flex justify-between">
                <div className="">Transaction id</div>
                <div className="">{socketData?.message}</div>
              </div>

              <div className="w-100 flex justify-between">
                <div className="">Amount Paid</div>
                <div className="">5000</div>
              </div>
            </div>
            <div className="text-[#555] font-semibold mb-2 text-xs mt-5">
              Redeem Code (Share to recieveing party)
            </div>
            {socketData?.status === "successful" && (
              <div className="bg-[#F7F5FF] border rounded-md p-2 px-3 flex mb-2">
                <input
                  type="text"
                  value={socketData?.infoR}
                  className="bg-transparent outline-none text-sm px-2 w-full text-[#323232]"
                />
                {copy ? (
                  <div className="text-[#6E3EFF] font-semibold mb-2 text-xs">
                    copied
                  </div>
                ) : (
                  <svg
                    onClick={() => {
                      copyCode(socketData?.infoR), setCopy(true);
                    }}
                    className="cursor-pointer"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M15.75 17.25V20.625C15.75 21.246 15.246 21.75 14.625 21.75H4.875C4.57663 21.75 4.29048 21.6315 4.0795 21.4205C3.86853 21.2095 3.75 20.9234 3.75 20.625V7.875C3.75 7.254 4.254 6.75 4.875 6.75H6.75C7.25257 6.74966 7.7543 6.79114 8.25 6.874M15.75 17.25H19.125C19.746 17.25 20.25 16.746 20.25 16.125V11.25C20.25 6.79 17.007 3.089 12.75 2.374C12.2543 2.29114 11.7526 2.24966 11.25 2.25H9.375C8.754 2.25 8.25 2.754 8.25 3.375V6.874M15.75 17.25H9.375C9.07663 17.25 8.79048 17.1315 8.5795 16.9205C8.36853 16.7095 8.25 16.4234 8.25 16.125V6.874M20.25 13.5V11.625C20.25 10.7299 19.8944 9.87145 19.2615 9.23852C18.6286 8.60558 17.7701 8.25 16.875 8.25H15.375C15.0766 8.25 14.7905 8.13148 14.5795 7.9205C14.3685 7.70952 14.25 7.42337 14.25 7.125V5.625C14.25 5.18179 14.1627 4.74292 13.9931 4.33345C13.8235 3.92397 13.5749 3.55191 13.2615 3.23852C12.9481 2.92512 12.576 2.67652 12.1666 2.50691C11.7571 2.3373 11.3182 2.25 10.875 2.25H9.75"
                      stroke="#0D0033"
                      strokeWidth="1.5"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                )}
              </div>
            )}
            <TxDownload />
          </div>
        ) : (
          <ul className="font-ui-regular text-[14px] text-body-text">
            <li className="flex w-full justify-between mb-[15px] modal:flex-col">
              <h3>Account Name</h3>
              <h5 className="font-ui-semi text-black">
                {paymentDetails.accountName}
              </h5>
            </li>
            <li className="flex w-full justify-between mb-[15px] modal:flex-col">
              <h3>Account Number</h3>
              <h5 className="font-ui-semi text-black">
                {paymentDetails.accountNumber}
              </h5>
            </li>
            <li className="flex w-full justify-between mb-[15px] modal:flex-col">
              <h3>Bank Name</h3>
              <h5 className="font-ui-semi text-black">{paymentDetails.bank}</h5>
            </li>
            <li className="flex w-full justify-between mb-[15px] modal:flex-col">
              <h3>Payment ID</h3>
              <h5 className="font-ui-semi text-black">
                {paymentDetails.payId}
              </h5>
            </li>
            <li className="flex w-full justify-between mb-[15px] modal:flex-col">
              <h3>Expiration Time</h3>
              <h5 className="font-ui-semi text-black">
                {formatDate(paymentDetails.expiration)}
              </h5>
            </li>
            <li className="flex w-full justify-between modal:flex-col">
              <h3>Amount</h3>
              <h5 className="font-ui-semi text-primary">
                â‚¦{paymentDetails.amount}
              </h5>
            </li>
          </ul>
        )}
      </div>
      {/* <form action="#">
                <h4 className='font-ui-semi text-body-text text-[14px] mb-[10px] mt-5'>Narration</h4>
                <input type="text" placeholder='Enter Code' className='py-[20px] px-[16px] border-border text-[14px] w-full outline-none border-ui-border rounded-lg mb-[30px]' />
                <button className='bg-primary font-ui-semi py-[17px] text-white w-full rounded-lg' onClick={handlePayment}>Pay</button>
            </form> */}
    </div>
  );
};

export default TransactModal;
